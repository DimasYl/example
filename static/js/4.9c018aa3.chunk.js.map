{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItems/DialogItems.tsx","components/Dialogs/Message/Messages.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItems","props","className","s","dialog","active","to","id","name","Messages","message","maxlength10","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElement","dialogs","map","d","messagesElement","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","connect","state","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,6FCQ3K,SAASC,EAAYC,GACxB,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,GAAIL,UAAWC,IAAEE,OAAlD,SAA2DJ,EAAMO,SCLtE,SAASC,EAASR,GACrB,OAAO,qBAAKC,UAAWC,IAAEO,QAAlB,SAA4BT,EAAMS,U,qCC2BzCC,EAAcC,YAAiB,IAY7BC,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,EAVE,SAACb,GAExB,OAAO,sBAAMe,SAAUf,EAAMgB,aAAtB,SACH,gCACA,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcH,KAAM,iBAAkBe,YAAa,uBACpG,kDAOOC,EAvC6B,SAACvB,GACzC,IAAIwB,EAAcxB,EAAMwB,YACpBC,EAAiBD,EAAYE,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC7B,EAAD,CAAaQ,KAAMqB,EAAErB,KAAiBD,GAAIsB,EAAEtB,IAAZsB,EAAEtB,OAChFuB,EAAkBL,EAAYM,SAASH,KAAI,SAAAI,GAAC,OAAI,cAACvB,EAAD,CAAUC,QAASsB,EAAEtB,SAAcsB,EAAEzB,OASzF,OACI,sBAAKL,UAAWC,IAAEwB,QAAlB,UACI,qBAAKzB,UAAWC,IAAE8B,aAAlB,SACKP,IAEL,sBAAKxB,UAAWC,IAAE4B,SAAlB,UACI,8BAAMD,IACN,cAACjB,EAAD,CAAkBG,SAZb,SAACkB,GACdjC,EAAMkC,YAAYD,EAAOE,0B,wBCkBlBC,sBACXC,aAlBoB,SAACC,GACrB,MAAO,CACHd,YAAac,EAAMd,gBAGA,SAACe,GACxB,MAAO,CACHL,YAAa,SAACC,GACVI,EAASC,YAAmBL,SAYpCM,IAHWL,CAIbb","file":"static/js/4.9c018aa3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3KabK\",\"dialogsItems\":\"Dialogs_dialogsItems__3Uw_C\",\"active\":\"Dialogs_active__37lZv\",\"messages\":\"Dialogs_messages__323N3\",\"message\":\"Dialogs_message__1eU7z\"};","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\ntype DialogsItemsPropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nexport function DialogItems(props: DialogsItemsPropsType) {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={'/dialogs/' + props.id} className={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\ntype MesagesPropsType = {\r\n    message: string\r\n}\r\n\r\nexport function Messages(props: MesagesPropsType) {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport {DialogItems} from \"./DialogItems/DialogItems\";\r\nimport {Messages} from \"./Message/Messages\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n    let dialogsPage = props.dialogsPage\r\n    let dialogsElement = dialogsPage.dialogs.map(d => <DialogItems name={d.name} key={d.id} id={d.id}/>)\r\n    let messagesElement = dialogsPage.messages.map(m => <Messages message={m.message} key={m.id}/>)\r\n\r\n\r\n\r\n    let addMessage = (values: any) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n                <DialogsReduxForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxlength10 = maxLengthCreator(20)\r\n\r\nexport const DialogsForm = (props: any) => {\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n        <Field component={Textarea} validate={[required, maxlength10]} name={'newMessageBody'} placeholder={'Enter your message'}/>\r\n        <button>Send</button>\r\n        </div>\r\n        </form>\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form: 'Dialogs'})(DialogsForm)\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport {DialogsPageType, sendMessageCreator} from \"../../redux/dialog-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootReduxState} from \"../../redux/redux-store\";\r\n\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose, Dispatch} from 'redux';\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\ntype MapDispatchToPropsType = {\r\n    sendMessage: (newMessageBody: string) => void\r\n\r\n}\r\n\r\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: RootReduxState): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n// export const withAuthRedirect(connect<MapStateToPropsType,MapDispatchToPropsType,{},RootReduxState>\r\n// (mapStateToProps, mapDispatchToProps)(Dialogs))\r\n//\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootReduxState>\r\n    (mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}