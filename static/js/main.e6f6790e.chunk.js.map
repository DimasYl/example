{"version":3,"sources":["redux/dialog-reducer.ts","components/Users/Users.module.css","api/api.ts","components/Navbar/Navbar.module.css","reportWebVitals.ts","redux/users-reducer.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Navbar/Navbar.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","components/common/Paginator/Paginator.tsx","assets/images/user.png","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selector.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","hoc/withSuspence.tsx","App.tsx","index.tsx","assets/images/preloader.gif","components/common/Preloader/Preloader.tsx","components/common/Paginator/Paginator.module.css","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","components/Header/Header.module.css","components/common/FormsControls/FormsControls.module.css","redux/profile-reducer.ts","hoc/withAuthRedirect.tsx"],"names":["SEND_MESSAGE","initialState","dialogs","name","id","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instanse","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","followed","post","unfollowed","delete","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","map","u","count","filter","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","redusers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","Navbar","className","s","nav","item","to","activeClassName","activeLink","Music","News","Settings","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNUmber","rightPortionPageNUmber","styles","paginator","prevButton","onClick","p","pageNumber","selectedPage","nextButton","User","follow","unfollow","alt","src","photos","small","userPhoto","photo","disabled","some","Users","props","getUser","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","items","totalCount","withAuthRedirect","Header","header","loginBlock","HeaderContainer","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","component","Input","validate","required","placeholder","error","length","stopSubmit","_error","formData","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","ReactDOM","document","getElementById","style","width","height","preloader","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","addPostActionCreator","newPostBody","setStatus","getUserProfile","newPost","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.e6f6790e.chunk.js","sourcesContent":["export type ActionTypes = SendMessageActionType\r\n\r\ntype SendMessageActionType = {\r\n    type: 'SEND_MESSAGE'\r\n    newMessageBody: string\r\n}\r\nexport type DialogsPageType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n}\r\nexport type DialogsType = {\r\n    name: string\r\n    id: number\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\"\r\n\r\nlet initialState: DialogsPageType = {\r\n    dialogs: [\r\n        {name: 'Dimych', id: 1},\r\n        {name: 'Andrey', id: 2},\r\n        {name: 'Sveta', id: 3},\r\n        {name: 'Sasha', id: 4},\r\n        {name: 'Victor', id: 5},\r\n        {name: 'Valera', id: 6}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is yuor it-kamasutra'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state: DialogsPageType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 7, message: body}]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody: string): SendMessageActionType => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageBody\r\n})\r\n\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__2PajG\"};","import axios from \"axios\";\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        \"API-KEY\": \"9796e0df-7156-4180-913f-3e6c30a4c76a\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage: number = 1, pageSize: number = 5){\r\n        return instanse.get(\r\n            `/users?page=${currentPage}&count=${pageSize}`\r\n        ).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    followed(id: number){\r\n        return instanse.post(\r\n            `/follow/${id}`, {}\r\n        ).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    unfollowed(id: number){\r\n        return instanse.delete(\r\n            `/follow/${id}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getProfile(userId: number){\r\n        console.warn('Obsolete method. Please profileApi object')\r\n       return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number){\r\n        return instanse.get(`/profile/` + userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instanse.get(`/profile/status/` + userId )\r\n    },\r\n    updateStatus(status: string) {\r\n        return instanse.put(`/profile/status`,{status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me(){\r\n        return instanse.get(`/auth/me`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n   login(email: string,password: string,rememberMe: boolean = false) {\r\n        return instanse.post(`/auth/login`, {email, password, rememberMe})\r\n   },\r\n   logout() {\r\n    return instanse.delete(`/auth/login`)\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__vt2I8\",\"item\":\"Navbar_item__3hdpX\",\"activeLink\":\"Navbar_activeLink__2iY89\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {usersAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootReduxState} from \"./redux-store\";\r\n\r\n\r\nexport type ActionType =\r\n    FollowActionType\r\n    | UnfollowActionType\r\n    | SetUsersActionType\r\n    | SetCurrentPageActionType\r\n    | SetTotalUsersCountActionType\r\n    | ToggleIsFetchingActionType\r\n    | ToggleFollowingProgressActionType\r\n\r\ntype FollowActionType = {\r\n    type: 'FOLLOW'\r\n    userId: number\r\n}\r\ntype UnfollowActionType = {\r\n    type: 'UNFOLLOW'\r\n    userId: number\r\n}\r\ntype SetUsersActionType = {\r\n    type: 'SET_USERS'\r\n    users: Array<UsersType>\r\n}\r\n\r\ntype SetCurrentPageActionType = {\r\n    type: 'SET_CURRENT_PAGE'\r\n    currentPage: number\r\n}\r\ntype SetTotalUsersCountActionType = {\r\n    type: 'SET_TOTAL_USERS_COUNT'\r\n    count: number\r\n}\r\ntype ToggleIsFetchingActionType = {\r\n    type: 'TOGGLE_IS_FETCHING'\r\n    isFetching: boolean\r\n}\r\ntype ToggleFollowingProgressActionType = {\r\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\n\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    photos: string\r\n    status: string\r\n    location: LocationType\r\n}\r\n\r\nexport type InitialStateType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UNFOLLOW = \"UNFOLLOW\"\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return (\r\n                {...state, followingInProgress: action.isFetching\r\n                        ? [...state.followingInProgress,action.userId]\r\n                        : state.followingInProgress.filter(id=>id !==action.userId)\r\n                }\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowActionType => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId: number): UnfollowActionType => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users: Array<UsersType>): SetUsersActionType => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n})\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n})\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingActionType => ({\r\n    type: TOGGLE_IS_FETCHING, isFetching\r\n})\r\nexport const toggleFollowingProgress = (isFetching: boolean,userId: number): ToggleFollowingProgressActionType => ({\r\n    type: \"TOGGLE_IS_FOLLOWING_PROGRESS\", isFetching, userId\r\n})\r\n\r\ntype ThunkType = ThunkAction<void, RootReduxState, unknown, ActionType>\r\n\r\nexport const getUsers = (page: number, pageSize: number):ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n\r\n        let response = await usersAPI.getUsers(page,pageSize)\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(response.items))\r\n            dispatch(setTotalUsersCount(response.totalCount))\r\n\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, id: number, apiMethod: any, actionCreator: any): Promise<void> => {\r\n    dispatch(toggleFollowingProgress(true, id))\r\n    let response = await apiMethod(id)\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, id))\r\n}\r\n\r\nexport const follow = (id:number):ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, id))\r\n        await followUnfollowFlow(dispatch, id, usersAPI.followed.bind(usersAPI), followSuccess)\r\n\r\n    }\r\n}\r\n\r\nexport const unfollow = (id:number):ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, id))\r\n         await followUnfollowFlow(dispatch,id,usersAPI.unfollowed.bind(usersAPI),unfollowSuccess)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default usersReducer","import {authAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootReduxState} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport type DataType = {\r\n    userId: string | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype SetAuthReducerActionType = {\r\n    type: 'SET_USER_DATA'\r\n    payload: DataType\r\n}\r\n\r\ntype AutLoginActionType = {\r\n    type: 'LOGIN'\r\n    data: {\r\n        userId: number\r\n    }\r\n}\r\ntype AntiLoginActionType = {\r\n    type: 'OUT_LOGIN'\r\n    data: {}\r\n}\r\n\r\n\r\ntype ActionType =  SetAuthReducerActionType | AutLoginActionType | AntiLoginActionType\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\ntype AuthType = {\r\n    userId: string | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nlet initialState: AuthType = {\r\n   userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action: ActionType): AuthType  => {\r\n    switch (action.type) {\r\n        case \"SET_USER_DATA\":\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData =\r\n    (userId: string | null,email: string | null,login: string | null, isAuth: boolean): SetAuthReducerActionType =>\r\n    ({type: SET_USER_DATA,payload: {userId,email,login, isAuth}})\r\n\r\ntype ThunkType = ThunkAction<void, RootReduxState, unknown, ActionType>\r\n\r\nexport const getAuthUserData = ():ThunkType => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n        if (response.resultCode === 0) {\r\n            let {userId, login, email} = response.data\r\n            dispatch(setAuthUserData(userId, email, login, true))\r\n        }\r\n\r\n}\r\n\r\n\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean): ThunkType=> async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n                // @ts-ignore\r\n                dispatch(stopSubmit(\"login\", {_error: message}))\r\n            }\r\n}\r\n\r\nexport const logout = (): ThunkType=> async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null,null,null, false))\r\n            }\r\n}\r\n\r\nexport default authReducer","import {ThunkAction} from \"redux-thunk\";\r\nimport {RootReduxState} from \"./redux-store\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\ntype SetInitializedActionType = {\r\n    type: 'INITIALIZED_SUCCESS'\r\n    initialized: boolean\r\n}\r\nconst INITIALIZED_SUCCESS= 'INITIALIZED_SUCCESS'\r\n\r\ntype InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action:SetInitializedActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n              initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = (initialized: boolean): SetInitializedActionType => ({type: \"INITIALIZED_SUCCESS\", initialized})\r\n// export const initializedSuccess = () => ({type: \"INITIALIZED_SUCCESS\"})\r\n\r\ntype ThunkType = ThunkAction<void, RootReduxState, unknown, SetInitializedActionType>\r\n\r\n\r\nexport const initializeApp = (): ThunkType => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    // dispatch(somethingelse())\r\n    // dispatch(somethingelse())\r\n    // @ts-ignore\r\n    promise.then(()=>{\r\n        dispatch(initializedSuccess(true))\r\n    })\r\n\r\n\r\n}\r\n\r\nexport default appReducer","import {applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialog-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet redusers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport type RootReduxState = ReturnType<typeof redusers>\r\n\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddleware))\r\nexport type ReduxStoreType = typeof store\r\nexport default store\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n        <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n    </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div>\r\n                News\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport styles from './Paginator.module.css'\r\n\r\ntype PaginatorPropsType = {\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize: number\r\n}\r\n\r\nconst Paginator: React.FC<PaginatorPropsType> = ({totalItemsCount,pageSize, currentPage,onPageChanged, portionSize}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNUmber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNUmber = portionNumber * portionSize\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 && <button className={styles.prevButton} onClick={()=>{setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNUmber && p <= rightPortionPageNUmber)\r\n                .map(p => {\r\n                return <span className={currentPage === p ? styles.pageNumber : styles.selectedPage}\r\n                             onClick={() => {onPageChanged(p)}}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber && <button className={styles.nextButton} onClick={()=>{setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n        </div>\r\n\r\n}\r\n\r\n\r\nexport default Paginator","export default __webpack_public_path__ + \"static/media/user.ab7efdc7.png\";","import {UsersType} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport styles from \"./Users.module.css\";\r\n\r\ntype UserPropsType = {\r\n    users: Array<UsersType>\r\n    followingInProgress: Array<number>\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\nexport const User: React.FC<UserPropsType> = ({users, followingInProgress, follow, unfollow}) => {\r\n    return <div>\r\n        {users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + u.id}><img alt={''}\r\n                                                          src={u.photos.small != null ? u.photos.small() : userPhoto}\r\n                                                          className={styles.photo}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed ? <button disabled={followingInProgress.some(id => id === u.id)}\r\n                                          onClick={() => {\r\n                                              unfollow(u.id)\r\n                                          }}>UnFollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === u.id)}\r\n                                  onClick={() => {\r\n                                      follow(u.id)\r\n                                  }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n            </span>\r\n            <span>\r\n                <div>{'u.location.country'}</div>\r\n                <div>{'u.location.city'}</div>\r\n            </span>\r\n        </div>)}\r\n    </div>\r\n}","import React from 'react'\r\nimport {UsersType} from \"../../redux/users-reducer\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    followingInProgress: Array<number>\r\n    followSuccess: (userId: number) => void\r\n    unfollowSuccess: (userId: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return <div>\r\n        <Paginator currentPage={props.currentPage}\r\n                   onPageChanged={props.onPageChanged}\r\n                    totalItemsCount={props.totalUsersCount}\r\n                   pageSize={props.pageSize}\r\n                   portionSize = {10}\r\n        />\r\n        <div>\r\n        <User users={props.users} follow={props.follow} followingInProgress={props.followingInProgress} unfollow={props.unfollow}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users","import {RootReduxState} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const getUserSelector = (state: RootReduxState) => {\r\n return state.usersPage.users\r\n}\r\n\r\nexport const getUser = createSelector(getUserSelector,(users)=>{\r\n    return users.filter(u=>true)\r\n})\r\n\r\nexport const getPageSize = (state: RootReduxState) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: RootReduxState) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: RootReduxState) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: RootReduxState) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: RootReduxState) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    followSuccess,\r\n    getUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow,\r\n    unfollowSuccess,\r\n    UsersType\r\n} from \"../../redux/users-reducer\";\r\nimport {RootReduxState} from \"../../redux/redux-store\";\r\nimport Users from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUser,\r\n} from \"../../redux/users-selector\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    followSuccess: (userId: number) => void\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    unfollowSuccess: (userId: number) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\ntype UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        // const {currentPage, pageSize} = this.props\r\n        // this.props.getUsers(currentPage, pageSize)\r\n        //вот так круче по феншую что выше\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                users={this.props.users}\r\n                followSuccess={this.props.followSuccess}\r\n                unfollowSuccess={this.props.unfollowSuccess}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: RootReduxState): MapStateToPropsType => {\r\n    return {\r\n        users: getUser(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch: any): mapDispatchToPropsType => {\r\n//     return {\r\n//         follow: (userId: number) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId: number) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users: Array<UsersType>) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber: number) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount: number) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching: boolean) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n// export default withAuthRedirect(connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootReduxState>\r\n// (mapStateToProps, {follow, unfollow, followSuccess, unfollowSuccess,\r\n//     setCurrentPage, toggleFollowingProgress, getUsers\r\n//     })(UsersContainer))\r\n//\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootReduxState>\r\n    (mapStateToProps, {\r\n        follow, unfollow, followSuccess, unfollowSuccess,\r\n        setCurrentPage, toggleFollowingProgress, getUsers\r\n    }),\r\n    withAuthRedirect)(UsersContainer)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\nimport {HeaderPropsType} from \"./HeaderContainer\";\r\n\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n    return <header className={s.header}>\r\n        <img alt='' src='https://forse-112-ua.at.ua/_ld/0/83573628.png'/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n            :<NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {RootReduxState} from \"../../redux/redux-store\";\r\n\r\nexport type HeaderPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderPropsType>{\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    logout: () => void\r\n}\r\nlet mapStateToProps = (state:RootReduxState): MapStateToPropsType => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default connect <MapStateToPropsType,MapDispatchToPropsType,{},RootReduxState>\r\n(mapStateToProps,{logout})(HeaderContainer);","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootReduxState} from \"../../redux/redux-store\";\r\n\r\n const Login = (props:any) => {\r\n    const onSubmit = (formData: any) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport const LoginForm = (props: any) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Input} validate={[required]} name={'email'} placeholder={'Email'}/>\r\n        </div>\r\n        <div>\r\n            <Field component={Input} validate={[required]} name={'password'} placeholder={'Password'} type={'password'}/>\r\n        </div>\r\n        <div>\r\n            <Field component={Input}  name={'rememberMe'} type={\"checkbox\"}/> remember me\r\n        </div>\r\n        <div>\r\n            <div>\r\n                {props.error}\r\n            </div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'Login'})(LoginForm)\r\n\r\ntype MapStateToPropsType = {\r\n     isAuth: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\nconst mapStateToProps = (state: RootReduxState): MapStateToPropsType => ({\r\n     isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect<MapStateToPropsType,MapDispatchToPropsType,{},RootReduxState>(mapStateToProps,{login})(Login)","import { Suspense } from \"react\"\r\nimport {Preloader} from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component: any) => {\r\n    return (props: any) => {\r\n        return   <Suspense fallback={<Preloader />}>\r\n        <Component {...props}/>\r\n        </Suspense>\r\n\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\"\r\nimport {Music} from \"./components/Music/Music\";\r\nimport {News} from \"./components/News/News\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootReduxState} from \"./redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspence\";\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\n\r\ntype AppPropsType = MapDispatchToPropsType & MapStateToPropsType\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className='app-wrapper-content'>\r\n                        <Route path='/dialogs' render={withSuspense(DialogsContainer) }/>\r\n                        <Route path='/profile/:userId?'\r\n                               render={withSuspense(ProfileContainer)}/>\r\n                        <Route path='/users' render={() => <UsersContainer/>}/>\r\n                        <Route path='/login' render={() => <Login/>}/>\r\n                        <Route path='/music' component={Music}/>\r\n                        <Route path='/news' component={News}/>\r\n                        <Route path='/settings' component={Settings}/>\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    initializeApp: () => void\r\n}\r\ntype MapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: RootReduxState) => ({\r\n    initialized: state.app.initialized\r\n})\r\nexport default compose(\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootReduxState>\r\n    (mapStateToProps, {initializeApp})(App))\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./redux/redux-store\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n            <App />\r\n            </Provider>\r\n        </BrowserRouter>, document.getElementById('root')\r\n    )\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export default __webpack_public_path__ + \"static/media/preloader.0bbdeb44.gif\";","import preloader from \"../../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <img alt={''} style={{width: '150px', height: '70px'}} src={preloader}/>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2uGjc\",\"pageNumber\":\"Paginator_pageNumber__2zPW0\",\"selectedPage\":\"Paginator_selectedPage__3cR_P\",\"nextButton\":\"Paginator_nextButton__tQvHv\",\"prevButton\":\"Paginator_prevButton__2WW0g\"};","import React from 'react'\r\nimport styles from './FormsControls.module.css'\r\n\r\n// @ts-ignore\r\nexport const FormControl = ({input, meta, child, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return <div className={styles.formControl + ' ' + (hasError? styles.error : '')}>\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n        <div>\r\n            {hasError && <span>{meta.error} </span>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n// @ts-ignore\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    // @ts-ignore\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n// @ts-ignore\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    // @ts-ignore\r\n    return <FormControl {...props}><input {...input} {...restProps} /> </FormControl>\r\n}","export const required = (value: any) => {\r\n    if(value){\r\n        return undefined\r\n    }\r\n    return 'Field is required'\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: any) => {\r\n    if(value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    }\r\n    return undefined\r\n}\r\n//\r\n// export const minLengthCreator = (minLength: number) => (value: any) => {\r\n//     if(value.length > value.minLength) return `Max length is ${minLength} symbols`\r\n//     return undefined\r\n//\r\n// }\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3L6tK\",\"loginBlock\":\"Header_loginBlock__1a9XU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1_bCD\",\"error\":\"FormsControls_error__2XZs6\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootReduxState} from \"./redux-store\";\r\n\r\nexport type ActionTypes =\r\n    AddPostActionType\r\n    | UpdateNewPostTextActionType\r\n    | SendMessageActionType\r\n    | SetUserProfileActionType\r\n    | SetStatusActionType\r\n    | DeletePostActionType\r\n\r\ntype AddPostActionType = {\r\n    type: 'ADD-POST'\r\n    newPostBody: string\r\n}\r\n\r\ntype DeletePostActionType = {\r\n    type: 'DELETE_POST'\r\n    id: number\r\n}\r\n\r\ntype UpdateNewPostTextActionType = {\r\n    type: 'UPDATE-NEW-POST-TEXT'\r\n    newText: string\r\n\r\n}\r\n\r\ntype SendMessageActionType = {\r\n    type: 'SEND_MESSAGE'\r\n}\r\n\r\ntype SetUserProfileActionType = {\r\n    type: \"SET_USER_PROFILE\"\r\n    profile: ProfileType | null\r\n}\r\ntype SetStatusActionType = {\r\n    type: \"SET_STATUS\"\r\n    status: string\r\n}\r\n\r\ntype PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    profile: ProfileType | null\r\n    status: string\r\n}\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\ntype ContactType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactType\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\nlet initialState: ProfilePageType = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 10},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 25},\r\n        {id: 3, message: 'Blabla', likesCount: 25},\r\n        {id: 4, message: 'Dada', likesCount: 25}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ActionTypes): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST : {\r\n            let newPost: PostType = {\r\n                id: 5, message: action.newPostBody, likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        }\r\n        case DELETE_POST:\r\n            return {...state, posts: [...state.posts.filter(p=>p.id !== action.id)]}\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostBody: string): AddPostActionType => ({type: ADD_POST, newPostBody})\r\nexport const deletePost = (id: number): DeletePostActionType => ({type: DELETE_POST, id})\r\n\r\n\r\nexport const setUserProfile = (profile: ProfileType | null): SetUserProfileActionType => (\r\n    {type: SET_USER_PROFILE, profile})\r\n\r\nexport const setStatus = (status: string): SetStatusActionType => (\r\n    {type: SET_STATUS, status})\r\n\r\n\r\ntype ThunkType = ThunkAction<void, RootReduxState, unknown, ActionTypes>\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n            dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n}\r\n\r\nexport default profileReducer","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootReduxState} from \"../redux/redux-store\";\r\n\r\n\r\ntype MapStateToPropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: RootReduxState):MapStateToPropsForRedirectType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n\r\n    class RedirectComponent extends React.Component<MapStateToPropsForRedirectType, any>{\r\n        render() {\r\n            if(!this.props.isAuth) return  <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect<MapStateToPropsForRedirectType,{},{},RootReduxState>(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n\r\n"],"sourceRoot":""}